import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "sonner";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const runtime = "edge";

export const metadata: Metadata = {
  title: "Annot8R: Client-Server",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        {/* <script>
          {`
            // Disable right-click
            document.addEventListener('contextmenu', (e) => e.preventDefault());

            // Disable certain key combinations
            document.addEventListener('keydown', (e) => {
              if (e.ctrlKey && (e.key === 'u' || e.key === 'U')) {
                e.preventDefault();
              }
              if (e.ctrlKey && e.shiftKey && (e.key === 'i' || e.key === 'I' || e.key === 'j' || e.key === 'J')) {
                e.preventDefault();
              }
              if (e.key === 'F12') {
                e.preventDefault();
              }
            });

            // Detect if DevTools is open (optional)
            const devToolsDetected = () => {
              const threshold = 160;
              const widthThreshold = window.outerWidth - window.innerWidth > threshold;
              const heightThreshold = window.outerHeight - window.innerHeight > threshold;
              if (widthThreshold || heightThreshold) {
                alert("DevTools is open. Please close it to continue.");
                window.close();
              }
            };

            setInterval(devToolsDetected, 1000);
          `}
        </script> */}
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
        <Toaster />
      </body>
    </html>
  );
}
